<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_product_for_order  extends eventsBase
{
	function __construct()
	{
	// fill list of events
		$this->events["selectList"]=true;


	}

//	handlers

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// List
function selectList($dataSource, $command)
{

		$data = array();
$data["member_id"] = $_SESSION["member_id"];
$data["checkin_date"] < NOW();
$data["checkout_date"] > NOW();
$rs = DB::Select("group_member_checkin", $data );

$data = array();
$data["member_id"] = $_SESSION["member_id"];
$data["checkin_date"] < NOW();
$data["checkout_date"] > NOW();
$rs = DB::Select("group_member_checkin", $data );

if($rs->fetchAssoc()){
	$sql = "SELECT DISTINCT
	group_product.group_product_id,
	group_product.group_id,
	group_product.product_type,
	group_product.product_name,
	group_product.stock_type,
	group_product.stock,
	group_product.order_type,
	group_product.price,
	group_product.curency,
	group_product.image
	FROM group_product
	INNER JOIN `group` ON group_product.group_id = `group`.group_id
	INNER JOIN group_member ON group_product.`group_id` = group_member.`group_id`
	WHERE group_product.`order_type` = 1 OR (group_member.`member_id` = " . $_SESSION["member_id"] . " AND group_product.order_type is not null)";
}else{
	$sql = "SELECT DISTINCT
	group_product.group_product_id,
	group_product.group_id,
	group_product.product_type,
	group_product.product_name,
	group_product.stock_type,
	group_product.stock,
	group_product.order_type,
	group_product.price,
	group_product.curency,
	group_product.image
	FROM group_product
	INNER JOIN `group` ON group_product.group_id = `group`.group_id
	INNER JOIN group_member ON group_product.`group_id` = group_member.`group_id`
	WHERE group_product.`order_type` = 1 OR (group_member.`member_id` = " . $_SESSION["member_id"] . " AND group_product.order_type = 2)";
}




$preparedSQL = DB::PrepareSQL( $sql );
$result = DB::Query( $preparedSQL );
if( !$result ) {
	$dataSource->setError( DB::LastError() );
	return false;
}
	// filter results, apply search, security & other filters
$result = $dataSource->filterResult( $result, $command->filter );
//	reorder results as requested
$dataSource->reorderResult( $command, $result );
return $result;

;		
} // function selectList

		
		
		
		
		



}
?>
