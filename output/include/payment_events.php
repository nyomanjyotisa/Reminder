<?php

/**
 * 	Dear developer!
 *	Never modify events.php file, it is autogenerated.
 *  Modify PHP/EventTemplates/events.txt instead.
 *
 */

 class eventclass_payment  extends eventsBase
{
	function __construct()
	{
	// fill list of events
		$this->events["AfterEdit"]=true;

		$this->events["BeforeEdit"]=true;



	}

//	handlers

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// After record updated
function AfterEdit(&$values, $where, &$oldvalues, &$keys, $inline, &$pageObject)
{

		$data = array();
$data["group_id"] = $oldvalues["group_id"];
$rs = DB::Select("group", $data );
while( $record = $rs->fetchAssoc() )
{
	$group = $record["group_name"];
}

$data = array();
$keyvalues = array();
$data["payment_status"] = "paid";
$data["change_money"] = $values["money_received"] - $oldvalues["total"];
$keyvalues["group_member_order"] = $oldvalues["group_member_order"];
DB::Update("group_member_order", $data , $keyvalues);

$msg = "Pembayaran anda di " . $group . " dengan id " . $oldvalues[group_member_order] . 
				" berhasil. Terimakasih.";

$rs = DB::Query("select chat_id from personal_channel
where member_id = '$oldvalues[member_id]' AND channel_id = 1");
$dataChannelTele=$rs->fetchAssoc();
if($dataChannelTele)
{
	$data = array();
	$data["chat_id"] = $dataChannelTele["chat_id"];
	$data["out_msg"] = $msg;
	$data["type"] = "msg";
	$data["flag"] = 1;
	$data["tgl"] = NOW();
	DB::Insert("outbox_telegram", $data );
}
else
{
	// if dont exist do something else
}

$rs = DB::Query("select chat_id from personal_channel
where member_id = '$oldvalues[member_id]' AND channel_id = 2");
$dataChannelTele=$rs->fetchAssoc();
if($dataChannelTele)
{
	$data = array();
	$data["chat_id"] = $dataChannelTele["chat_id"];
	$data["out_msg"] = $msg;
	$data["type"] = "msg";
	$data["flag"] = 1;
	$data["tgl"] = NOW();
	DB::Insert("outbox_mail_aws", $data );
}
else
{
	// if dont exist do something else
}

// Place event code here.
// Use "Add Action" button to add code snippets.
;		
} // function AfterEdit

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
				// Before record updated
function BeforeEdit(&$values, $where, &$oldvalues, &$keys, &$message, $inline, &$pageObject)
{

		$data = array();
$data["group_member_order_id"] = $oldvalues["group_member_order"];
$rs = DB::Select("group_member_order_detail", $data );
while( $record = $rs->fetchAssoc() )
{
    $data = array();
		$data["group_product_id"] = $record['group_product_id'];
		$rs = DB::Select("group_product", $data );
		while( $record2 = $rs->fetchAssoc() )
		{
			$stokType = $record2["stock_type"];
			$stok = $record2["stock"];
			$namaProduk = $record2["product_name"];
		}

		if($stokType==1){
			$data = array();
			$keyvalues = array();
			$data["stock"] = $stok - $record['quantity'];
			$keyvalues["group_product_id"] = $record['group_product_id'];
			DB::Update("group_product", $data , $keyvalues);
		}else if($stokType==3){
			$data = array();
			$data["group_id"] = $record['group_id'];
			$data["product_name"] = $namaProduk;
			$rs = DB::Select("lookup_stok", $data );

			while( $record3 = $rs->fetchAssoc() )
			{
				$stokAPI = $record3["stock"];
			}
			
			$data = array();
			$keyvalues = array();
			$data["stock"] = $stokAPI - $record['quantity'];
			$keyvalues["group_id"] = $record['group_id'];
			$keyvalues["product_name"] = $namaProduk;
			DB::Update("lookup_stok", $data , $keyvalues);
		}
}

// Place event code here.
// Use "Add Action" button to add code snippets.

return true;
;		
} // function BeforeEdit

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		

		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		



}
?>
